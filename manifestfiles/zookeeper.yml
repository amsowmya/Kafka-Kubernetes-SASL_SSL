apiVersion: v1
kind: ConfigMap
metadata:
  name: zookeeper-config
data:
  zoo.cfg: |
    tickTime=2000
    initLimit=10
    syncLimit=5
    dataDir=/bitnami/zookeeper/data
    clientPort=2181
    maxClientCnxns=60
    autopurge.purgeInterval=0
    preAllocSize=65536
    snapCount=100000
    maxCnxns=0
    reconfigEnabled=false
    quorumListenOnAllIPs=false
    4lw.commands.whitelist=srvr, mntr, ruok
    maxSessionTimeout=40000
    authProvider.1=org.apache.zookeeper.server.auth.SASLAuthenticationProvider
    requireClientAuthScheme=sasl
    jaasLoginRenew=3600000
    server.1=20.235.98.93:2888:3888;2181
    ZOO_ENABLE_AUTH=true
  jaas.conf: |
    Client {
      org.apache.zookeeper.server.auth.DigestLoginModule required
      username=zkadmin
      password=TriZett0;
    };
    Server {
      org.apache.zookeeper.server.auth.DigestLoginModule required
      user_zkadmin=TriZett0;
    };
    QuorumServer {
      org.apache.zookeeper.server.auth.DigestLoginModule required
      user_zkadmin=TriZett0;
    };
    QuorumLearner {
      org.apache.zookeeper.server.auth.DigestLoginModule required
      username=zkadmin
      password=TriZett0;
    };
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-headless
  labels:
    app: zookeeper
spec:
  ports:
    - port: 2888
      name: server
    - port: 3888
      name: leader-election
  clusterIP: None
  selector:
    app: zookeeper
---
apiVersion: v1
kind: Service
metadata:
  name: zookeeper-service
  labels:
    app: zookeeper
spec:
  loadBalancerIP: 20.235.98.93
  type: LoadBalancer
  ports:
    - name: zk-client
      port: 2181
      targetPort: 2181
  selector:
    app: zookeeper
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: zookeeper
spec:
  serviceName: zookeeper-service
  replicas: 1
  selector:
    matchLabels:
      app: zookeeper
  template:
    metadata:
      labels:
        app: zookeeper
    spec:
      containers:
      - name: zookeeper
        image: bitnami/zookeeper:latest
        resources:
          requests:
            memory: "500Mi"
            cpu: "0.5"
        ports:
          - containerPort: 2181
            name: client
          - containerPort: 2888
            name: server
          - containerPort: 3888
            name: leader-election
        volumeMounts:
        - name: zookeeper-data
          mountPath: /bitnami/zookeeper/data
        - name: config-volume
          mountPath: /opt/bitnami/zookeeper/conf
          readOnly: true
        env:
        - name: JVMFLAGS
          value: "-Djava.security.auth.login.config=/opt/bitnami/zookeeper/conf/jaas.conf"
        - name: ZOO_ENABLE_AUTH
          value: "true"
        - name: ZOO_AUTHENTICATION
          value: "true"
        command:
        - "sh"
        - "-c"
        - "/opt/bitnami/zookeeper/bin/zkServer.sh start-foreground"
      securityContext:
        runAsUser: 1000
        fsGroup: 1000
      volumes:
      - name: zookeeper-data
        emptyDir: {}
      - name: config-volume
        configMap:
          name: zookeeper-config
  volumeClaimTemplates:
    - metadata:
        name: datadir
      spec:
        accessModes: [ "ReadWriteOnce" ]
        resources:
          requests:
            storage: 1Gi
# ---
# apiVersion: networking.k8s.io/v1
# kind: NetworkPolicy
# metadata:
#   name: zookeeper-network-policy
# spec:
#   podSelector:
#     matchLabels:
#       app: zookeeper
#   ingress:
#     - ports:
#         - protocol: TCP
#           port: 2181
#         - protocol: TCP
#           port: 2888
#         - protocol: TCP
#           port: 3888
#   egress:
#     - ports:
#         - protocol: TCP
#           port: 2181
#         - protocol: TCP
#           port: 2888
#         - protocol: TCP
#           port: 3888
